version: 2.0

build_jobs: &build_jobs
  jobs:
    - build-amd64
    - build-arm64
    - build-armhf
    - push-manifest:
        requires:
          - build-amd64
          - build-arm64
          - build-armhf

workflows:
  version: 2
  commit:
    <<: *build_jobs
  nightly:
    <<: *build_jobs
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master

shared: &shared
  working_directory: /home/circleci/project
  docker:
    - image: docker:18-git
  steps:
    - checkout

    - setup_remote_docker:
        docker_layer_caching: true

    - run:
        name: Install build dependencies.
        command: apk add --no-cache bash curl git jq make perl

    - run:
        # Unforunately, there's no easy way to "merge" anchors/references
        # according to the YAML 1.2 spec. So, the recommended way to handle
        # this is to dump your values into a file and source it at build time.
        # @see e.g., https://circleci.com/docs/2.0/env-vars/#interpolating-environment-variables
        name: Set up shared environment vars.
        command: |
          sh -c .circleci/load_env.sh
          source $BASH_ENV
          echo "VERSION: $VERSION"

    - run:
        name: Build and push Docker image.
        command: |
          source $BASH_ENV
          sh -c .circleci/push-multiarch.sh

jobs:
  build-amd64:
    <<: *shared
    environment:
      GOARCH: amd64
      PROMU_ARCH: amd64
      QEMU_ARCH: amd64
      TAG: amd64
      TARGET: amd64
  build-arm64:
    <<: *shared
    environment:
      GOARCH: arm64
      PROMU_ARCH: arm64
      QEMU_ARCH: aarch64
      QEMU_VERSION: v2.11.0
      TAG: arm64
      TARGET: arm64v8
  build-armhf:
    <<: *shared
    environment:
      GOARCH: arm
      PROMU_ARCH: armv7
      QEMU_ARCH: arm
      QEMU_VERSION: v2.11.0
      TAG: arm
      TARGET: arm32v6

  # =======================================
  # ---------------------------------------
  # =======================================

  push-manifest:
    docker:
      - image: docker:18-git
    environment:
      GITHUB_REPO: justwatchcom/elasticsearch_exporter
      IMAGE: elasticsearch_exporter
      REGISTRY: jessestuart
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Determine repo version.
          command: |
            apk update && apk add curl jq
            sh -c .circleci/load_env.sh

      - run:
          name: Install manifest-tool.
          command: |
            source $BASH_ENV
            echo "Downloading manifest-tool."
            wget https://github.com/estesp/manifest-tool/releases/download/v1.0.0-rc3/manifest-tool-linux-amd64
            mv manifest-tool-linux-amd64 /usr/bin/manifest-tool
            chmod +x /usr/bin/manifest-tool
            manifest-tool --version

      - run:
          name: Push Docker manifest.
          command: |
            source $BASH_ENV
            echo "Pushing manifest ${REGISTRY}/${IMAGE}:latest"
            echo $DOCKERHUB_PASS | docker login -u $DOCKERHUB_USER --password-stdin;
            manifest-tool push from-args \
              --platforms linux/arm,linux/arm64,linux/amd64 \
              --template "$REGISTRY/$IMAGE:$VERSION-ARCH" \
              --target "$REGISTRY/$IMAGE:latest"
            manifest-tool push from-args \
              --platforms linux/arm,linux/arm64,linux/amd64 \
              --template "$REGISTRY/$IMAGE:$VERSION-ARCH" \
              --target "$REGISTRY/$IMAGE:$VERSION"
      - run:
          name: Verify manifest was persisted remotely.
          command: |
            source $BASH_ENV
            manifest-tool inspect "$REGISTRY/$IMAGE:$VERSION"
